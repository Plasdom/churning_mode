# settings file for BOUT++
#
# Churning mode simulation in 2D slab around X-point(s)
#


# settings used by the core code

nout = 20    # number of time-steps
timestep = 5.0e-2  # time between outputs [1/t_0 = a_mid/C_s0]

MXG = 3                  
MYG = 0                

periodicX = false 
#periodicY = false

[mesh]

nx = 32+6
ny = 1
nz = 32

staggergrids = true

#Ly = 1
#Lz = 4
#dx = Lx / nx
#dy = Ly / nz
#dz = Lz / nz
dx = 0.008
dy = 0.008
dz = 0.008

ixseps1 = -1    # Required to get BCs in y-axis to work

##################################################
# derivative methods

[mesh:ddx]

first = C2
second = C2
fourth = C2
upwind = W3

[mesh:ddy]

first = C2
second = C2
fourth = C2
upwind = W3

[mesh:ddz]

first = C2
second = C2
fourth = C2
upwind = W3

###################################################
# Time-integration solver

[solver]
type = cvode
#atol = 1e-16  # absolute tolerance
#rtol = 1e-8   # relative tolerance
mxstep = 10000  # Maximum internal steps per output
use_precon = false

##################################################
# general settings for the model

#[phiSolver]
#[laplacexy]
#include_y_derivs = true
#pctype = hypre  # Preconditioner
#finite_volume = false

#type = petsc  # Needed if Boussinesq = false
#pctype = bjacobi  # Preconditioning type

#fourth_order = true  # 4th order or 2nd order

#inner_boundary_flags = 0
#outer_boundary_flags = 0

# 0  = Zero value
# 10 = Zero gradient AC inner & outer
# 15 = Zero gradient AC and DC
# 768 = Zero laplace inner & outer

#[phiSolver:precon]  # Preconditioner (if pctype=user)
#filter = 0.0     # Must not filter solution
#flags = 49152  # set_rhs i.e. identity matrix in boundaries

[invertible]

#ksp_type = gmres

[model]

# Parameters
chi = 0.0e0         # Thermal diffusivity [m^2 s^-1]
D_m = 0.0e-2           # Magnetic diffusivity [m^2 s^-1]
mu = 0.0e-3            # Kinematic viscosity [m^2 s^-1]
R_0 = 1.5           # Major radius [m]
a_mid = 0.6         # Minor radius at midplane [m]
n_sepx = 1.0e19     # Electron density at separatrix [m^-3]
T_sepx = 100        # Plasma temperature at separatrix [eV]
B_t0 = 2            # Toroidal field strength [T]
B_pmid = 0.1          # Poloidal field strength [T]

# Switches
invert_laplace = false        # Use Laplace inversion routine to solve phi (if false, will instead solve via a constraint)
evolve_pressure = true              # Evolve plasma pressure
include_churn_drive_term = true    # Include the churn driving term in the vorticity equation (2 * epsilon * dP/dy)
include_mag_restoring_term = true  # Include the poloidal magnetic field restoring term in the vorticity equation (2 / beta_p * {psi, Del^2 psi})
include_advection = true            # Include advection terms

[all]

bndry_all = none

[P]

# Initialise in normalised form
gradient = 5.0

nz = 32
dy = 0.008
Ly = dy * nz

y_c = (z/(2*pi) - 0.5) * Ly

function = gradient * y_c

# TODO: Check these BCs on P
#bndry_yup = neumann
#bndry_ydown = neumann

[psi]

#bndry_all = none

# Define parameters and functions for psi initialisation

#a = 0.15        # Overall decay length of psi from centre
d = 0.35         # Decay length of differential rotation from centre
chi_0 = 0     # Max rotation of psi at the centre
e = 2.71828

nx = 32+6
nz = 32
dx = 0.008
dy = 0.008
Lx = dx * (nx-6) 
Ly = dy * nz

x_c = (x - 0.5) * Lx
y_c = (z/(2*pi) - 0.5) * Ly
r = sqrt(x_c^2 + y_c^2)
theta = atan(y_c, x_c)

initial_psi = -{r_arg}^2 * sin(2 * ({theta_arg} + (pi/4) + chi_0 * e ^ (-{r_arg}^2 / d^2) ) )
#initial_psi = -{r_arg}^3 * sin(3 * ({theta_arg} + chi_0 * e ^ (-{r_arg}^2 / d^2) ) )
function = [r_arg = r, theta_arg = theta](initial_psi)
scale = [r_arg = 1, theta_arg = pi/2](1/initial_psi)

[omega]

#bndry_all = dirichlet

# Initialise in normalised form
function = 0

[phi]
#bndry_yup = dirichlet
#bndry_ydown = dirichlet
#bndry_xin = zerolaplace
#bndry_xout = zerolaplace


# Initialise in normalised form
function = 0
